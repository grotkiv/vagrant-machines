# -*- mode: ruby -*-
# vi: set ft=ruby :

second_disk = '../data.vdi'

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "debian/buster64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "../share", "/share"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
     vb.name = "debian64"
     vb.gui = true
     vb.cpus = 4
     vb.memory = 8192
     #vb.customize ["modifyvm", :id, "--nictype1", "82540EM"]
     vb.customize ["modifyvm", :id, "--vram", "128"]
     # Enable the VM's virtual USB controller & enable the virtual USB 2.0 controller
     vb.customize ["modifyvm", :id, "--usb", "on", "--usbehci", "on"]
     vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
     vb.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]
     vb.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]
     if ! File.exist?(".vagrant/machines/default/virtualbox/action_provision")
        vb.customize ["storagectl", :id, "--name", "IDE Controller", "--add", "ide"]
     end
     vb.customize ["storageattach", :id, "--storagectl", "IDE Controller", "--port", "0", "--device", "0", "--type", "dvddrive", "--medium", "C:/Program Files/Oracle/VirtualBox/VBoxGuestAdditions.iso"]
     unless File.exist?(second_disk)
         vb.customize ['createhd', '--filename', second_disk, '--size', 100 * 1024]
     end
     vb.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', second_disk]
  end

  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
     cp /vagrant/keyboard /etc/default/keyboard
     setupcon
     adduser --disabled-password --gecos "" marcel
     echo "marcel:start" | chpasswd
     adduser marcel sudo
     cp /vagrant/.bash_aliases /home/marcel
     export DEBIAN_FRONTEND=noninteractive
     apt-get update
     apt-get upgrade -y
     apt-get install -y linux-headers-amd64
     apt-get install -y xinit x11-xserver-utils lxterminal openbox slim
     apt-get install -y build-essential vim-gtk git gitk mutt dillo mupdf
     apt-get install -y libncurses5-dev gcc-arm-linux-gnueabihf bc lzop
     echo "default_user        marcel" >> /etc/slim.conf
     echo "auto_login          yes"    >> /etc/slim.conf
     echo "x-terminal-emulator &"      >> /etc/xdg/openbox/autostart
     mount /dev/cdrom /mnt
     yes | /mnt/VBoxLinuxAdditions.run
     if ! [ -e /dev/sdb1 ]; then
         echo ",,L" | sfdisk /dev/sdb
     mkfs.ext4 /dev/sdb1
     fi
     mkdir /data
     echo "/dev/sdb1    /data           ext4        errors=remount-ro 0       1" >> /etc/fstab
     reboot
  SHELL
end
